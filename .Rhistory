x<- 4L
str(x)
class(x)
x<-c(4,TRUE)
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
rbind(x,y)
d<-rbindx,y
d<-rbind(x,y)
class(d)
x<-list(2,"a","b",TRUE)
d<-x[[1]]
class(D)
class(d)
x<-1:4
x
y<-2:3
x+y
d<-x+y
class(d)
y
x<-c(3,5,1,10,12,6)
x[x<=5]<-0
x
getwd()
dat <- read.csv("~/Dropbox/coursera/Data Science/R Programming/hw1_data.csv", header = TRUE)
head(dat)
tail(dat)
dat[47]
dat[[47]
)
dat[[47]]
View(dat)
View(dat)
dat[names(dat)==NA]
nrow(subset(dat,Ozone==NA))
nrow(subset(dat,Ozone=="NA"))
colMeans(dat)
colMeans(subset(dat, Ozone >=0))
colMeans(subset(dat, Ozone > 31 & Temp > 90))
colMeans(subset(dat, Month = 6))
install.packages("swirl")
swirl()
library("swirl")
swirl()
source("~/Documents/Coding/Coursera/Data Science/datascience/readDirectoryFullOfFiles.R")
setwd("~/Downloads/")
readDirectoryFullOfFiles("specdata")
source("~/Documents/Coding/Coursera/Data Science/datascience/readDirectoryFullOfFiles.R")
readDirectoryFullOfFiles("specdata")
readDirectoryFullOfFiles("./specdata")
source("~/Documents/Coding/Coursera/Data Science/datascience/readDirectoryFullOfFiles.R")
readDirectoryFullOfFiles("./specdata")
source("~/Documents/Coding/Coursera/Data Science/datascience/pollutantmean.R")
pollutantmean("./specdata/")
pollutantmean("./specdata/","nitrate")
source("~/Documents/Coding/Coursera/Data Science/datascience/complete.R")
complete("./specdata/")
source("~/Documents/Coding/Coursera/Data Science/datascience/corr.R")
install.packages(plyr)
install.packages("plyr")
source("~/Documents/Coding/Coursera/Data Science/datascience/corr.R")
corr("./specdata/")
dat <- readDirectoryFullOfFiles("./specdata/")
subset(complete(directory), nobs > 400)
sufficientCasesMonitor <- subset(complete("./specdata/"), nobs > 400)
merge(x = dat, y = sufficientCasesMonitor, by "id")
merge(x = dat, y = sufficientCasesMonitor, by = "id")
merge(x = dat, y = sufficientCasesMonitor, by.x = "ID", by.y = "id")
test <- merge(x = dat, y = sufficientCasesMonitor, by.x = "ID", by.y = "id")
?cor
cor(test$sulfate, test$nitrate)
test[!is.na(test[["sulfate"]])]
subset(test, !is.na(sulfate))
test <- subset(test, !is.na(sulfate) & !is.na(nitrate))
cor(test$sulfate,test$nitrate)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
setwd("~/Documents/Coding/Coursera/Data Science/datascience/")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
source("~/Documents/Coding/Coursera/Data Science/datascience/complete.R")
test <- complete("./specdata/")
library(httr)
oauth_endpoints("github")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf(con,c(9,5,4,1,3,5,4,1,3,5,4,1,3))
dat <- read.fwf(con,c(10,5,4,1,3,5,4,1,3,5,4,1,3))
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat <- read.fwf(con,c(10,5,4,1,3,5,4,1,3,5,4,1,3))
head(dat)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat <- read.fwf(con,c(10,5,4,1,3,5,4,1,3,5,4,1,3),header = FALSE,skip = 4)
dat
sum(dat$V11)
sum(dat$V7)
install.packages(httpuv)
install.packages("httpuv")
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "7d76385c68240416334c", secret = "9b28f247e729d5aac4037d90fcedc1391a88f52a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
content(req)
content(req)[1]
content(req)[1]$name
content(req)[1][1]
content(req)[["name"]
]
content(req)[["name"]]
content(req)[1][["name"]]
content(req)[2]
head(content(req)[2])
str(content(req))
content(req)[3]
content(req)[4]
content(req)[5]
content(req)[6]
content(req)[7]
content(req)[8]
source("~/Documents/Coding/Coursera/Data Science/datascience/complete.R")
complete("./specdata/")
submit()
source("~/Documents/Coding/Coursera/Data Science/datascience/corr.R")
corr("./specdata/",150)
dat
dat <- readDirectoryFullOfFiles(directory)
dat <- readDirectoryFullOfFiles("./specdata/")
sufficientCase <- subset(complete("./specdata/"), nobs > 150)
View(sufficientCasesMonitor)
View(sufficientCasesMonitor)
View(sufficientCase)
head(dat)
subset(dat, !is.na(dat$sulfate) & !is.na(dat$nitrate))
dat <- subset(dat, !is.na(dat$sulfate) & !is.na(dat$nitrate))
head(dat)
?merge
merge(x = dat, y = sufficientCase, by.x = dat$ID, by.y = sufficientCase$id)
merge(x = dat, y = sufficientCase, by.x = "ID", by.y = "id")
dat <- merge(x = dat, y = sufficientCase, by.x = "ID", by.y = "id")
head(dat)
data.frame(COR = cor(dat$sulfate, dat$nitrate))
ddply(dat, .(ID), return(data.frame(COR = cor(xx$sulfate, xx$nitrate))))
ddply(dat, .(ID), return(data.frame(COR = cor(dat$sulfate, dat$nitrate))))
ddply(dat, .(ID), function(dat){return(data.frame(COR = cor(dat$sulfate, dat$nitrate)))})
result <- ddply(dat, .(ID), function(dat){return(data.frame(COR = cor(dat$sulfate, dat$nitrate)))})
as.vector(result['COR'])
avector <- as.vector(result['COR'])
head(avector)
summary(avector)
submit()
corr("./specdata/",150)
monitorPolutantCorrelation <- ddply(dat, .(id), function(df){
return(data.frame(COR = cor(df$sulfate, df$nitrate)))})
monitorPolutantCorrelation <- ddply(dat, .(ID), function(df){
return(data.frame(COR = cor(df$sulfate, df$nitrate)))})
monitorPolutantCorrelation
as.vector(monitorPolutantCorrelation['COR'])
submit()
source("~/Documents/Coding/Coursera/Data Science/datascience/corr.R")
corr("./specdata/",150)
result$COR
head(result$COR)
head(result$COR)
source("~/Documents/Coding/Coursera/Data Science/datascience/corr.R")
please <- corr("./specdata/",150)
summary(please)
head(please)
submit()
submit()
submit()
